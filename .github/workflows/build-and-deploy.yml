# .github/workflows/build-and-deploy.yml
name: Build & Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Or 'master', depending on your default branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Initialize npm project and install Tailwind CSS
        # This creates package.json and installs tailwindcss as a dev dependency
        run: |
          npm init -y
          npm install -D tailwindcss@latest

      - name: Add build script to package.json
        # This command programmatically adds our build script to package.json.
        # This is the most reliable way to run local node binaries in CI.
        run: npm pkg set scripts.build="tailwindcss -c ./tailwind.config.js -i ./src/input.css -o ./public/dist/style.css --minify"

      - name: Build Tailwind CSS
        # Now, we run the script we just defined. npm handles finding the executable.
        run: npm run build

      - name: Copy static assets to output directory
        # Using 'public' is a safe, neutral name that avoids any Jekyll conflicts.
        run: |
          rsync -av --exclude 'public/' \
                    --exclude '.git/' \
                    --exclude '.github/' \
                    --exclude 'src/' \
                    --exclude 'tailwind.config.js' \
                    --exclude 'package*.json' \
                    --exclude 'node_modules/' \
                    ./ ./public/

      - name: Create .nojekyll file
        # This explicitly tells GitHub Pages not to use Jekyll.
        run: touch ./public/.nojekyll

      - name: Upload public folder as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write      # To deploy to GitHub Pages
      id-token: write   # To authenticate with GitHub Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
